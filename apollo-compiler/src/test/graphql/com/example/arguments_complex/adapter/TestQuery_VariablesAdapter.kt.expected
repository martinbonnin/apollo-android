// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.arguments_complex.adapter

import com.apollographql.apollo3.api.DoubleResponseAdapter
import com.apollographql.apollo3.api.Input
import com.apollographql.apollo3.api.IntResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.example.arguments_complex.TestQuery
import com.example.arguments_complex.type.Episode_ResponseAdapter
import kotlin.IllegalStateException

object TestQuery_VariablesAdapter : ResponseAdapter<TestQuery> {
  override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
      TestQuery = throw IllegalStateException("Input type used in output position")
  override fun toResponse(
    writer: JsonWriter,
    responseAdapterCache: ResponseAdapterCache,
    value: TestQuery
  ) {
    if (value.episode is Input.Present) {
      writer.name("episode")
      Episode_ResponseAdapter.nullable().toResponse(writer, responseAdapterCache,
          value.episode.value)
    }
    writer.name("stars")
    IntResponseAdapter.toResponse(writer, responseAdapterCache, value.stars)
    writer.name("greenValue")
    DoubleResponseAdapter.toResponse(writer, responseAdapterCache, value.greenValue)
  }
}
