// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.adapter

import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.apollographql.apollo.api.internal.ResponseReader
import com.apollographql.apollo.api.internal.ResponseWriter
import com.example.fragment_in_fragment.AllStarships
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
object AllStarships_ResponseAdapter : ResponseAdapter<AllStarships.Data> {
  val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
    ResponseField(
      type = ResponseField.Type.Named.Object("StarshipsConnection"),
      responseName = "allStarships",
      fieldName = "allStarships",
      arguments = mapOf<String, Any?>(
        "first" to 7),
      conditions = emptyList(),
      possibleFieldSets = mapOf(
        "" to AllStarships.RESPONSE_FIELDS
      ),
    )
  )

  override fun fromResponse(reader: ResponseReader, __typename: String?):
      com.example.fragment_in_fragment.AllStarships.Data {
    return reader.run {
      var allStarships: com.example.fragment_in_fragment.AllStarships.Data.AllStarships? = null
      while(true) {
        when (selectField(RESPONSE_FIELDS)) {
          0 -> allStarships = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships>(RESPONSE_FIELDS[0]) { reader ->
            AllStarships.fromResponse(reader)
          }
          else -> break
        }
      }
      com.example.fragment_in_fragment.AllStarships.Data(
        allStarships = allStarships
      )
    }
  }

  override fun toResponse(writer: ResponseWriter,
      value: com.example.fragment_in_fragment.AllStarships.Data) {
    if(value.allStarships == null) {
      writer.writeObject(RESPONSE_FIELDS[0], null)
    } else {
      writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
        AllStarships.toResponse(writer, value.allStarships)
      }
    }
  }

  object AllStarships :
      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships> {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipsEdge")),
        responseName = "edges",
        fieldName = "edges",
        arguments = emptyMap(),
        conditions = emptyList(),
        possibleFieldSets = mapOf(
          "" to Edge.RESPONSE_FIELDS
        ),
      )
    )

    override fun fromResponse(reader: ResponseReader, __typename: String?):
        com.example.fragment_in_fragment.AllStarships.Data.AllStarships {
      return reader.run {
        var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge?>? = null
        while(true) {
          when (selectField(RESPONSE_FIELDS)) {
            0 -> edges = readList<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge>(RESPONSE_FIELDS[0]) { reader ->
              reader.readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge> { reader ->
                Edge.fromResponse(reader)
              }
            }
            else -> break
          }
        }
        com.example.fragment_in_fragment.AllStarships.Data.AllStarships(
          edges = edges
        )
      }
    }

    override fun toResponse(writer: ResponseWriter,
        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships) {
      writer.writeList(RESPONSE_FIELDS[0], value.edges) { value, listItemWriter ->
        listItemWriter.writeObject { writer ->
          Edge.toResponse(writer, value)
        }
      }
    }

    object Edge :
        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge> {
      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.Named.Object("Starship"),
          responseName = "node",
          fieldName = "node",
          arguments = emptyMap(),
          conditions = emptyList(),
          possibleFieldSets = mapOf(
            "Starship" to Node.StarshipNode.RESPONSE_FIELDS,
            "" to Node.OtherNode.RESPONSE_FIELDS,
          ),
        )
      )

      override fun fromResponse(reader: ResponseReader, __typename: String?):
          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge {
        return reader.run {
          var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node? = null
          while(true) {
            when (selectField(RESPONSE_FIELDS)) {
              0 -> node = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node>(RESPONSE_FIELDS[0]) { reader ->
                Node.fromResponse(reader)
              }
              else -> break
            }
          }
          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge(
            node = node
          )
        }
      }

      override fun toResponse(writer: ResponseWriter,
          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge) {
        if(value.node == null) {
          writer.writeObject(RESPONSE_FIELDS[0], null)
        } else {
          writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
            Node.toResponse(writer, value.node)
          }
        }
      }

      object Node :
          ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node>
          {
<<<<<<< HEAD
        private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
          ResponseField(
            type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
            responseName = "__typename",
            fieldName = "__typename",
            arguments = emptyMap(),
            conditions = emptyList(),
          )
        )

=======
>>>>>>> e374eee24... forward subfields
        override fun fromResponse(reader: ResponseReader, __typename: String?):
            com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node {
          val typename = __typename ?: reader.readString(ResponseField.Typename)
          return when(typename) {
            "Starship" -> StarshipNode.fromResponse(reader, typename)
            else -> OtherNode.fromResponse(reader, typename)
          }
        }

        override fun toResponse(writer: ResponseWriter,
            value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node) {
          when(value) {
            is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode -> StarshipNode.toResponse(writer, value)
            is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode -> OtherNode.toResponse(writer, value)
          }
        }

        object StarshipNode :
            ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode>
            {
          val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField(
              type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
              responseName = "__typename",
              fieldName = "__typename",
              arguments = emptyMap(),
              conditions = emptyList(),
              possibleFieldSets = emptyMap(),
            ),
            ResponseField(
              type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
              responseName = "id",
              fieldName = "id",
              arguments = emptyMap(),
              conditions = emptyList(),
              possibleFieldSets = emptyMap(),
            ),
            ResponseField(
              type = ResponseField.Type.Named.Other("String"),
              responseName = "name",
              fieldName = "name",
              arguments = emptyMap(),
              conditions = emptyList(),
              possibleFieldSets = emptyMap(),
            ),
            ResponseField(
              type = ResponseField.Type.Named.Object("StarshipPilotsConnection"),
              responseName = "pilotConnection",
              fieldName = "pilotConnection",
              arguments = emptyMap(),
              conditions = emptyList(),
              possibleFieldSets = mapOf(
                "" to PilotConnection.RESPONSE_FIELDS
              ),
            )
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode {
            return reader.run {
              var __typename: String? = __typename
              var id: String? = null
              var name: String? = null
              var pilotConnection: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection? = null
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> __typename = readString(RESPONSE_FIELDS[0])
                  1 -> id = readString(RESPONSE_FIELDS[1])
                  2 -> name = readString(RESPONSE_FIELDS[2])
                  3 -> pilotConnection = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection>(RESPONSE_FIELDS[3]) { reader ->
                    PilotConnection.fromResponse(reader)
                  }
                  else -> break
                }
              }
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode(
                __typename = __typename!!,
                id = id!!,
                name = name,
                pilotConnection = pilotConnection
              )
            }
          }

          override fun toResponse(writer: ResponseWriter,
              value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode) {
            writer.writeString(RESPONSE_FIELDS[0], value.__typename)
            writer.writeString(RESPONSE_FIELDS[1], value.id)
            writer.writeString(RESPONSE_FIELDS[2], value.name)
            if(value.pilotConnection == null) {
              writer.writeObject(RESPONSE_FIELDS[3], null)
            } else {
              writer.writeObject(RESPONSE_FIELDS[3]) { writer ->
                PilotConnection.toResponse(writer, value.pilotConnection)
              }
            }
          }

          object PilotConnection :
              ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection>
              {
            val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
              ResponseField(
                type =
                    ResponseField.Type.List(ResponseField.Type.Named.Object("StarshipPilotsEdge")),
                responseName = "edges",
                fieldName = "edges",
                arguments = emptyMap(),
                conditions = emptyList(),
                possibleFieldSets = mapOf(
                  "" to Edge.RESPONSE_FIELDS
                ),
              )
            )

            override fun fromResponse(reader: ResponseReader, __typename: String?):
                com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection {
              return reader.run {
                var edges: List<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge?>? = null
                while(true) {
                  when (selectField(RESPONSE_FIELDS)) {
                    0 -> edges = readList<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge>(RESPONSE_FIELDS[0]) { reader ->
                      reader.readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge> { reader ->
                        Edge.fromResponse(reader)
                      }
                    }
                    else -> break
                  }
                }
                com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection(
                  edges = edges
                )
              }
            }

            override fun toResponse(writer: ResponseWriter,
                value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection) {
              writer.writeList(RESPONSE_FIELDS[0], value.edges) { value, listItemWriter ->
                listItemWriter.writeObject { writer ->
                  Edge.toResponse(writer, value)
                }
              }
            }

            object Edge :
                ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge>
                {
              val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                ResponseField(
                  type = ResponseField.Type.Named.Object("Person"),
                  responseName = "node",
                  fieldName = "node",
                  arguments = emptyMap(),
                  conditions = emptyList(),
                  possibleFieldSets = mapOf(
                    "Person" to Node.PersonNode.RESPONSE_FIELDS,
                    "" to Node.OtherNode.RESPONSE_FIELDS,
                  ),
                )
              )

              override fun fromResponse(reader: ResponseReader, __typename: String?):
                  com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge {
                return reader.run {
                  var node: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node? = null
                  while(true) {
                    when (selectField(RESPONSE_FIELDS)) {
                      0 -> node = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node>(RESPONSE_FIELDS[0]) { reader ->
                        Node.fromResponse(reader)
                      }
                      else -> break
                    }
                  }
                  com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge(
                    node = node
                  )
                }
              }

              override fun toResponse(writer: ResponseWriter,
                  value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge) {
                if(value.node == null) {
                  writer.writeObject(RESPONSE_FIELDS[0], null)
                } else {
                  writer.writeObject(RESPONSE_FIELDS[0]) { writer ->
                    Node.toResponse(writer, value.node)
                  }
                }
              }

              object Node :
                  ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node>
                  {
<<<<<<< HEAD
                private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                  ResponseField(
                    type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                    responseName = "__typename",
                    fieldName = "__typename",
                    arguments = emptyMap(),
                    conditions = emptyList(),
                  )
                )

=======
>>>>>>> e374eee24... forward subfields
                override fun fromResponse(reader: ResponseReader, __typename: String?):
                    com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node {
                  val typename = __typename ?: reader.readString(ResponseField.Typename)
                  return when(typename) {
                    "Person" -> PersonNode.fromResponse(reader, typename)
                    else -> OtherNode.fromResponse(reader, typename)
                  }
                }

                override fun toResponse(writer: ResponseWriter,
                    value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node) {
                  when(value) {
                    is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode -> PersonNode.toResponse(writer, value)
                    is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode -> OtherNode.toResponse(writer, value)
                  }
                }

                object PersonNode :
                    ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode>
                    {
                  val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                    ResponseField(
                      type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                      responseName = "__typename",
                      fieldName = "__typename",
                      arguments = emptyMap(),
                      conditions = emptyList(),
                      possibleFieldSets = emptyMap(),
                    ),
                    ResponseField(
                      type = ResponseField.Type.Named.Other("String"),
                      responseName = "name",
                      fieldName = "name",
                      arguments = emptyMap(),
                      conditions = emptyList(),
                      possibleFieldSets = emptyMap(),
                    ),
                    ResponseField(
                      type = ResponseField.Type.Named.Object("Planet"),
                      responseName = "homeworld",
                      fieldName = "homeworld",
                      arguments = emptyMap(),
                      conditions = emptyList(),
                      possibleFieldSets = mapOf(
                        "Planet" to Homeworld.PlanetHomeworld.RESPONSE_FIELDS,
                        "" to Homeworld.OtherHomeworld.RESPONSE_FIELDS,
                      ),
                    )
                  )

                  override fun fromResponse(reader: ResponseReader, __typename: String?):
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode {
                    return reader.run {
                      var __typename: String? = __typename
                      var name: String? = null
                      var homeworld: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld? = null
                      while(true) {
                        when (selectField(RESPONSE_FIELDS)) {
                          0 -> __typename = readString(RESPONSE_FIELDS[0])
                          1 -> name = readString(RESPONSE_FIELDS[1])
                          2 -> homeworld = readObject<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld>(RESPONSE_FIELDS[2]) { reader ->
                            Homeworld.fromResponse(reader)
                          }
                          else -> break
                        }
                      }
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode(
                        __typename = __typename!!,
                        name = name,
                        homeworld = homeworld
                      )
                    }
                  }

                  override fun toResponse(writer: ResponseWriter,
                      value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode) {
                    writer.writeString(RESPONSE_FIELDS[0], value.__typename)
                    writer.writeString(RESPONSE_FIELDS[1], value.name)
                    if(value.homeworld == null) {
                      writer.writeObject(RESPONSE_FIELDS[2], null)
                    } else {
                      writer.writeObject(RESPONSE_FIELDS[2]) { writer ->
                        Homeworld.toResponse(writer, value.homeworld)
                      }
                    }
                  }

                  object Homeworld :
                      ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld>
                      {
<<<<<<< HEAD
                    private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                      ResponseField(
                        type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                        responseName = "__typename",
                        fieldName = "__typename",
                        arguments = emptyMap(),
                        conditions = emptyList(),
                      )
                    )

=======
>>>>>>> e374eee24... forward subfields
                    override fun fromResponse(reader: ResponseReader, __typename: String?):
                        com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld {
                      val typename = __typename ?: reader.readString(ResponseField.Typename)
                      return when(typename) {
                        "Planet" -> PlanetHomeworld.fromResponse(reader, typename)
                        else -> OtherHomeworld.fromResponse(reader, typename)
                      }
                    }

                    override fun toResponse(writer: ResponseWriter,
                        value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld) {
                      when(value) {
                        is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld -> PlanetHomeworld.toResponse(writer, value)
                        is com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld -> OtherHomeworld.toResponse(writer, value)
                      }
                    }

                    object PlanetHomeworld :
                        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld>
                        {
                      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                        ResponseField(
                          type =
                              ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                          responseName = "__typename",
                          fieldName = "__typename",
                          arguments = emptyMap(),
                          conditions = emptyList(),
                          possibleFieldSets = emptyMap(),
                        ),
                        ResponseField(
                          type = ResponseField.Type.Named.Other("String"),
                          responseName = "name",
                          fieldName = "name",
                          arguments = emptyMap(),
                          conditions = emptyList(),
                          possibleFieldSets = emptyMap(),
                        )
                      )

                      override fun fromResponse(reader: ResponseReader, __typename: String?):
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld {
                        return reader.run {
                          var __typename: String? = __typename
                          var name: String? = null
                          while(true) {
                            when (selectField(RESPONSE_FIELDS)) {
                              0 -> __typename = readString(RESPONSE_FIELDS[0])
                              1 -> name = readString(RESPONSE_FIELDS[1])
                              else -> break
                            }
                          }
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld(
                            __typename = __typename!!,
                            name = name
                          )
                        }
                      }

                      override fun toResponse(writer: ResponseWriter,
                          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.PlanetHomeworld) {
                        writer.writeString(RESPONSE_FIELDS[0], value.__typename)
                        writer.writeString(RESPONSE_FIELDS[1], value.name)
                      }
                    }

                    object OtherHomeworld :
                        ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld>
                        {
                      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                        ResponseField(
                          type =
                              ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                          responseName = "__typename",
                          fieldName = "__typename",
                          arguments = emptyMap(),
                          conditions = emptyList(),
                          possibleFieldSets = emptyMap(),
                        )
                      )

                      override fun fromResponse(reader: ResponseReader, __typename: String?):
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld {
                        return reader.run {
                          var __typename: String? = __typename
                          while(true) {
                            when (selectField(RESPONSE_FIELDS)) {
                              0 -> __typename = readString(RESPONSE_FIELDS[0])
                              else -> break
                            }
                          }
                          com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld(
                            __typename = __typename!!
                          )
                        }
                      }

                      override fun toResponse(writer: ResponseWriter,
                          value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.PersonNode.Homeworld.OtherHomeworld) {
                        writer.writeString(RESPONSE_FIELDS[0], value.__typename)
                      }
                    }
                  }
                }

                object OtherNode :
                    ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode>
                    {
                  val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
                    ResponseField(
                      type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
                      responseName = "__typename",
                      fieldName = "__typename",
                      arguments = emptyMap(),
                      conditions = emptyList(),
                      possibleFieldSets = emptyMap(),
                    )
                  )

                  override fun fromResponse(reader: ResponseReader, __typename: String?):
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode {
                    return reader.run {
                      var __typename: String? = __typename
                      while(true) {
                        when (selectField(RESPONSE_FIELDS)) {
                          0 -> __typename = readString(RESPONSE_FIELDS[0])
                          else -> break
                        }
                      }
                      com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode(
                        __typename = __typename!!
                      )
                    }
                  }

                  override fun toResponse(writer: ResponseWriter,
                      value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.StarshipNode.PilotConnection.Edge.Node.OtherNode) {
                    writer.writeString(RESPONSE_FIELDS[0], value.__typename)
                  }
                }
              }
            }
          }
        }

        object OtherNode :
            ResponseAdapter<com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode>
            {
          val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
            ResponseField(
              type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
              responseName = "__typename",
              fieldName = "__typename",
              arguments = emptyMap(),
              conditions = emptyList(),
              possibleFieldSets = emptyMap(),
            )
          )

          override fun fromResponse(reader: ResponseReader, __typename: String?):
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode {
            return reader.run {
              var __typename: String? = __typename
              while(true) {
                when (selectField(RESPONSE_FIELDS)) {
                  0 -> __typename = readString(RESPONSE_FIELDS[0])
                  else -> break
                }
              }
              com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode(
                __typename = __typename!!
              )
            }
          }

          override fun toResponse(writer: ResponseWriter,
              value: com.example.fragment_in_fragment.AllStarships.Data.AllStarships.Edge.Node.OtherNode) {
            writer.writeString(RESPONSE_FIELDS[0], value.__typename)
          }
        }
      }
    }
  }
}
