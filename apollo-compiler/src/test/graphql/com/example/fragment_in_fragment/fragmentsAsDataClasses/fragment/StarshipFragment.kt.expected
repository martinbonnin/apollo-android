// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.fragment_in_fragment.fragment

import com.apollographql.apollo3.api.Fragment
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.fragment_in_fragment.fragment.adapter.StarshipFragment_ResponseAdapter
import com.example.fragment_in_fragment.fragment.adapter.StarshipFragment_VariablesAdapter
import kotlin.String
import kotlin.collections.List

class StarshipFragment : Fragment<StarshipFragment.Data> {
  override fun adapter(): ResponseAdapter<Data> {
    return StarshipFragment_ResponseAdapter.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> = listOf(
    ResponseField.FieldSet(null, StarshipFragment_ResponseAdapter.RESPONSE_FIELDS)
  )
  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    StarshipFragment_VariablesAdapter.obj().toResponse(writer, responseAdapterCache, this)
  }

  /**
   * A single transport craft that has hyperdrive capability.
   */
  data class Data(
    val __typename: String = "Starship",
    /**
     * The ID of an object
     */
    val id: String,
    /**
     * The name of this starship. The common name, such as "Death Star".
     */
    val name: String?,
    val pilotConnection: PilotConnection?
  ) : Fragment.Data {
    /**
     * A connection to a list of items.
     */
    data class PilotConnection(
      /**
       * A list of edges.
       */
      val edges: List<Edges?>?
    ) {
      /**
       * An edge in a connection.
       */
      data class Edges(
        /**
         * The item at the end of the edge
         */
        val node: Node?
      ) {
        /**
         * An individual person or character within the Star Wars universe.
         */
        data class Node(
          val __typename: String = "Person",
          val pilotFragment: PilotFragment.Data?
        )
      }
    }
  }
}
