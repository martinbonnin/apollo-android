// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.mutation_create_review.adapter

import com.apollographql.apollo3.api.IntResponseAdapter
import com.apollographql.apollo3.api.NullableStringResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.Variable
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.mutation_create_review.CreateReviewForEpisode
import com.example.mutation_create_review.type.CustomScalars
import com.example.mutation_create_review.type.Episode
import com.example.mutation_create_review.type.Episode_ResponseAdapter
import java.util.Date
import kotlin.Array
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
internal object CreateReviewForEpisode_ResponseAdapter :
    ResponseAdapter<CreateReviewForEpisode.Data> {
  val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
    ResponseField(
      type = ResponseField.Type.Named.Object("Review"),
      fieldName = "createReview",
      arguments = mapOf<String, Any?>(
        "episode" to Variable("ep"),
        "review" to Variable("review")),
      fieldSets = listOf(
        ResponseField.FieldSet(null, CreateReview.RESPONSE_FIELDS)
      ),
    )
  )

  val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }

  override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
      CreateReviewForEpisode.Data {
    var createReview: CreateReviewForEpisode.Data.CreateReview? = null
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> createReview = CreateReview.obj().nullable().fromResponse(reader, responseAdapterCache)
        else -> break
      }
    }
    return CreateReviewForEpisode.Data(
      createReview = createReview
    )
  }

  override fun toResponse(
    writer: JsonWriter,
    responseAdapterCache: ResponseAdapterCache,
    value: CreateReviewForEpisode.Data
  ) {
    writer.beginObject()
    writer.name("createReview")
    CreateReview.obj().nullable().toResponse(writer, responseAdapterCache, value.createReview)
    writer.endObject()
  }

  object CreateReview : ResponseAdapter<CreateReviewForEpisode.Data.CreateReview> {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("Int")),
        fieldName = "stars",
      ),
      ResponseField(
        type = ResponseField.Type.Named.Other("String"),
        fieldName = "commentary",
      ),
      ResponseField(
        type =
            ResponseField.Type.List(ResponseField.Type.NotNull(ResponseField.Type.List(ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String"))))),
        fieldName = "listOfListOfString",
      ),
      ResponseField(
        type =
            ResponseField.Type.List(ResponseField.Type.NotNull(ResponseField.Type.List(ResponseField.Type.NotNull(ResponseField.Type.Named.Other("Episode"))))),
        fieldName = "listOfListOfEnum",
      ),
      ResponseField(
        type =
            ResponseField.Type.List(ResponseField.Type.NotNull(ResponseField.Type.List(ResponseField.Type.NotNull(ResponseField.Type.Named.Other("Date"))))),
        fieldName = "listOfListOfCustom",
      ),
      ResponseField(
        type =
            ResponseField.Type.List(ResponseField.Type.NotNull(ResponseField.Type.List(ResponseField.Type.NotNull(ResponseField.Type.Named.Object("Character"))))),
        fieldName = "listOfListOfObject",
        fieldSets = listOf(
          ResponseField.FieldSet(null, ListOfListOfObject.RESPONSE_FIELDS)
        ),
      )
    )

    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        CreateReviewForEpisode.Data.CreateReview {
      var stars: Int? = null
      var commentary: String? = null
      var listOfListOfString: List<List<String>>? = null
      var listOfListOfEnum: List<List<Episode>>? = null
      var listOfListOfCustom: List<List<Date>>? = null
      var listOfListOfObject: List<List<CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject>>? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> stars = IntResponseAdapter.fromResponse(reader, responseAdapterCache)
          1 -> commentary = NullableStringResponseAdapter.fromResponse(reader, responseAdapterCache)
          2 -> listOfListOfString = StringResponseAdapter.list().list().nullable().fromResponse(reader,
              responseAdapterCache)
          3 -> listOfListOfEnum = Episode_ResponseAdapter.list().list().nullable().fromResponse(reader,
              responseAdapterCache)
          4 -> listOfListOfCustom = responseAdapterCache.responseAdapterFor<Date>(CustomScalars.Date).list().list().nullable().fromResponse(reader,
              responseAdapterCache)
          5 -> listOfListOfObject = ListOfListOfObject.obj().list().list().nullable().fromResponse(reader,
              responseAdapterCache)
          else -> break
        }
      }
      return CreateReviewForEpisode.Data.CreateReview(
        stars = stars!!,
        commentary = commentary,
        listOfListOfString = listOfListOfString,
        listOfListOfEnum = listOfListOfEnum,
        listOfListOfCustom = listOfListOfCustom,
        listOfListOfObject = listOfListOfObject
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: CreateReviewForEpisode.Data.CreateReview
    ) {
      writer.beginObject()
      writer.name("stars")
      IntResponseAdapter.toResponse(writer, responseAdapterCache, value.stars)
      writer.name("commentary")
      NullableStringResponseAdapter.toResponse(writer, responseAdapterCache, value.commentary)
      writer.name("listOfListOfString")
      StringResponseAdapter.list().list().nullable().toResponse(writer, responseAdapterCache,
          value.listOfListOfString)
      writer.name("listOfListOfEnum")
      Episode_ResponseAdapter.list().list().nullable().toResponse(writer, responseAdapterCache,
          value.listOfListOfEnum)
      writer.name("listOfListOfCustom")
      responseAdapterCache.responseAdapterFor<Date>(CustomScalars.Date).list().list().nullable().toResponse(writer,
          responseAdapterCache, value.listOfListOfCustom)
      writer.name("listOfListOfObject")
      ListOfListOfObject.obj().list().list().nullable().toResponse(writer, responseAdapterCache,
          value.listOfListOfObject)
      writer.endObject()
    }

    object ListOfListOfObject :
        ResponseAdapter<CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject> {
      val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
        ResponseField(
          type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
          fieldName = "name",
        )
      )

      val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }

      override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
          CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject {
        var name: String? = null
        while(true) {
          when (reader.selectName(RESPONSE_NAMES)) {
            0 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
            else -> break
          }
        }
        return CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject(
          name = name!!
        )
      }

      override fun toResponse(
        writer: JsonWriter,
        responseAdapterCache: ResponseAdapterCache,
        value: CreateReviewForEpisode.Data.CreateReview.ListOfListOfObject
      ) {
        writer.beginObject()
        writer.name("name")
        StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
        writer.endObject()
      }
    }
  }
}
