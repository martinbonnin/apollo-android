// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.mutation_create_review.type.adapter

import com.apollographql.apollo3.api.Input
import com.apollographql.apollo3.api.IntResponseAdapter
import com.apollographql.apollo3.api.NullableBooleanResponseAdapter
import com.apollographql.apollo3.api.NullableIntResponseAdapter
import com.apollographql.apollo3.api.NullableStringResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.mutation_create_review.type.CustomScalars
import com.example.mutation_create_review.type.Episode_ResponseAdapter
import com.example.mutation_create_review.type.ReviewInput
import java.util.Date
import kotlin.IllegalStateException

internal object ReviewInput_InputAdapter : ResponseAdapter<ReviewInput> {
  override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
      ReviewInput = throw IllegalStateException("Input type used in output position")
  override fun toResponse(
    writer: JsonWriter,
    responseAdapterCache: ResponseAdapterCache,
    value: ReviewInput
  ) {
    writer.beginObject()
    writer.name("stars")
    IntResponseAdapter.toResponse(writer, responseAdapterCache, value.stars)
    if (value.nullableIntFieldWithDefaultValue is Input.Present) {
      writer.name("nullableIntFieldWithDefaultValue")
      NullableIntResponseAdapter.toResponse(writer, responseAdapterCache,
          value.nullableIntFieldWithDefaultValue.value)
    }
    if (value.commentary is Input.Present) {
      writer.name("commentary")
      NullableStringResponseAdapter.toResponse(writer, responseAdapterCache, value.commentary.value)
    }
    writer.name("favoriteColor")
    ColorInput_InputAdapter.obj().toResponse(writer, responseAdapterCache, value.favoriteColor)
    if (value.enumWithDefaultValue is Input.Present) {
      writer.name("enumWithDefaultValue")
      Episode_ResponseAdapter.nullable().toResponse(writer, responseAdapterCache,
          value.enumWithDefaultValue.value)
    }
    if (value.nonNullableEnumWithDefaultValue is Input.Present) {
      writer.name("nonNullableEnumWithDefaultValue")
      Episode_ResponseAdapter.toResponse(writer, responseAdapterCache,
          value.nonNullableEnumWithDefaultValue.value)
    }
    if (value.nullableEnum is Input.Present) {
      writer.name("nullableEnum")
      Episode_ResponseAdapter.nullable().toResponse(writer, responseAdapterCache,
          value.nullableEnum.value)
    }
    if (value.listOfCustomScalar is Input.Present) {
      writer.name("listOfCustomScalar")
      responseAdapterCache.responseAdapterFor<Date>(CustomScalars.Date).nullable().list().nullable().toResponse(writer,
          responseAdapterCache, value.listOfCustomScalar.value)
    }
    if (value.customScalar is Input.Present) {
      writer.name("customScalar")
      responseAdapterCache.responseAdapterFor<Date>(CustomScalars.Date).nullable().toResponse(writer,
          responseAdapterCache, value.customScalar.value)
    }
    if (value.listOfEnums is Input.Present) {
      writer.name("listOfEnums")
      Episode_ResponseAdapter.nullable().list().nullable().toResponse(writer, responseAdapterCache,
          value.listOfEnums.value)
    }
    if (value.listOfInt is Input.Present) {
      writer.name("listOfInt")
      NullableIntResponseAdapter.list().nullable().toResponse(writer, responseAdapterCache,
          value.listOfInt.value)
    }
    if (value.listOfString is Input.Present) {
      writer.name("listOfString")
      NullableStringResponseAdapter.list().nullable().toResponse(writer, responseAdapterCache,
          value.listOfString.value)
    }
    writer.name("listOfStringNonOptional")
    NullableStringResponseAdapter.list().toResponse(writer, responseAdapterCache,
        value.listOfStringNonOptional)
    if (value.listOfInputTypes is Input.Present) {
      writer.name("listOfInputTypes")
      ColorInput_InputAdapter.obj().nullable().list().nullable().toResponse(writer,
          responseAdapterCache, value.listOfInputTypes.value)
    }
    if (value.booleanWithDefaultValue is Input.Present) {
      writer.name("booleanWithDefaultValue")
      NullableBooleanResponseAdapter.toResponse(writer, responseAdapterCache,
          value.booleanWithDefaultValue.value)
    }
    if (value.booleanNonOptional is Input.Present) {
      writer.name("booleanNonOptional")
      NullableBooleanResponseAdapter.toResponse(writer, responseAdapterCache,
          value.booleanNonOptional.value)
    }
    if (value.listOfListOfString is Input.Present) {
      writer.name("listOfListOfString")
      StringResponseAdapter.list().list().nullable().toResponse(writer, responseAdapterCache,
          value.listOfListOfString.value)
    }
    if (value.listOfListOfEnum is Input.Present) {
      writer.name("listOfListOfEnum")
      Episode_ResponseAdapter.list().list().nullable().toResponse(writer, responseAdapterCache,
          value.listOfListOfEnum.value)
    }
    if (value.listOfListOfCustom is Input.Present) {
      writer.name("listOfListOfCustom")
      responseAdapterCache.responseAdapterFor<Date>(CustomScalars.Date).list().list().nullable().toResponse(writer,
          responseAdapterCache, value.listOfListOfCustom.value)
    }
    if (value.listOfListOfObject is Input.Present) {
      writer.name("listOfListOfObject")
      ColorInput_InputAdapter.obj().list().list().nullable().toResponse(writer,
          responseAdapterCache, value.listOfListOfObject.value)
    }
    if (value.capitalizedField is Input.Present) {
      writer.name("CapitalizedField")
      NullableStringResponseAdapter.toResponse(writer, responseAdapterCache,
          value.capitalizedField.value)
    }
    if (value.capitalizedInt is Input.Present) {
      writer.name("CapitalizedInt")
      NullableIntResponseAdapter.toResponse(writer, responseAdapterCache,
          value.capitalizedInt.value)
    }
    writer.endObject()
  }
}
