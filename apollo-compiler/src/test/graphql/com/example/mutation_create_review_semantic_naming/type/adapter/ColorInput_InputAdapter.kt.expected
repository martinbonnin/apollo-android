// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.mutation_create_review_semantic_naming.type.adapter

import com.apollographql.apollo3.api.DoubleResponseAdapter
import com.apollographql.apollo3.api.Input
import com.apollographql.apollo3.api.IntResponseAdapter
import com.apollographql.apollo3.api.NullableDoubleResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.mutation_create_review_semantic_naming.type.ColorInput
import com.example.mutation_create_review_semantic_naming.type.Episode_ResponseAdapter
import kotlin.IllegalStateException

object ColorInput_InputAdapter : ResponseAdapter<ColorInput> {
  override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
      ColorInput = throw IllegalStateException("Input type used in output position")
  override fun toResponse(
    writer: JsonWriter,
    responseAdapterCache: ResponseAdapterCache,
    value: ColorInput
  ) {
    writer.beginObject()
    if (value.red is Input.Present) {
      writer.name("red")
      IntResponseAdapter.toResponse(writer, responseAdapterCache, value.red.value)
    }
    if (value.green is Input.Present) {
      writer.name("green")
      NullableDoubleResponseAdapter.toResponse(writer, responseAdapterCache, value.green.value)
    }
    if (value.blue is Input.Present) {
      writer.name("blue")
      DoubleResponseAdapter.toResponse(writer, responseAdapterCache, value.blue.value)
    }
    if (value.enumWithDefaultValue is Input.Present) {
      writer.name("enumWithDefaultValue")
      Episode_ResponseAdapter.nullable().toResponse(writer, responseAdapterCache,
          value.enumWithDefaultValue.value)
    }
    if (value.reviewRefInput is Input.Present) {
      writer.name("reviewRefInput")
      ReviewRefInput_InputAdapter.obj().nullable().toResponse(writer, responseAdapterCache,
          value.reviewRefInput.value)
    }
    writer.endObject()
  }
}
