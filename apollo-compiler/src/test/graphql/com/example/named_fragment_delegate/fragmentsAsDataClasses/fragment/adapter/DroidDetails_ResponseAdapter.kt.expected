// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.named_fragment_delegate.fragment.adapter

import com.apollographql.apollo3.api.NullableStringResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_delegate.fragment.DroidDetails
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
object DroidDetails_ResponseAdapter : ResponseAdapter<DroidDetails.Data> {
  val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
    ResponseField.Typename,
    ResponseField(
      type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
      fieldName = "name",
    ),
    ResponseField(
      type = ResponseField.Type.Named.Other("String"),
      fieldName = "primaryFunction",
    ),
    ResponseField(
      type = ResponseField.Type.List(ResponseField.Type.Named.Object("Character")),
      fieldName = "friends",
      fieldSets = listOf(
        ResponseField.FieldSet(null, Friends.RESPONSE_FIELDS)
      ),
    )
  )

  val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }

  override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
      DroidDetails.Data {
    var __typename: String? = null
    var name: String? = null
    var primaryFunction: String? = null
    var friends: List<DroidDetails.Data.Friends?>? = null
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
        1 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
        2 -> primaryFunction = NullableStringResponseAdapter.fromResponse(reader,
            responseAdapterCache)
        3 -> friends = Friends.obj().nullable().list().nullable().fromResponse(reader,
            responseAdapterCache)
        else -> break
      }
    }
    return DroidDetails.Data(
      __typename = __typename!!,
      name = name!!,
      primaryFunction = primaryFunction,
      friends = friends
    )
  }

  override fun toResponse(
    writer: JsonWriter,
    responseAdapterCache: ResponseAdapterCache,
    value: DroidDetails.Data
  ) {
    writer.beginObject()
    writer.name("__typename")
    StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
    writer.name("name")
    StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
    writer.name("primaryFunction")
    NullableStringResponseAdapter.toResponse(writer, responseAdapterCache, value.primaryFunction)
    writer.name("friends")
    Friends.obj().nullable().list().nullable().toResponse(writer, responseAdapterCache,
        value.friends)
    writer.endObject()
  }

  object Friends : ResponseAdapter<DroidDetails.Data.Friends> {
    val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
      ResponseField(
        type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
        fieldName = "name",
      )
    )

    val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }

    override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
        DroidDetails.Data.Friends {
      var name: String? = null
      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> name = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
          else -> break
        }
      }
      return DroidDetails.Data.Friends(
        name = name!!
      )
    }

    override fun toResponse(
      writer: JsonWriter,
      responseAdapterCache: ResponseAdapterCache,
      value: DroidDetails.Data.Friends
    ) {
      writer.beginObject()
      writer.name("name")
      StringResponseAdapter.toResponse(writer, responseAdapterCache, value.name)
      writer.endObject()
    }
  }
}
