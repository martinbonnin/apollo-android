// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.named_fragment_with_variables.fragment

import com.apollographql.apollo3.api.Fragment
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.named_fragment_with_variables.fragment.adapter.QueryFragment_ResponseAdapter
import com.example.named_fragment_with_variables.fragment.adapter.QueryFragment_VariablesAdapter
import com.example.named_fragment_with_variables.type.UserQuery
import kotlin.Int
import kotlin.String
import kotlin.collections.List

data class QueryFragment(
  val organizationId: String,
  val query: UserQuery,
  val size: Int
) : Fragment<QueryFragment.Data> {
  override fun adapter(): ResponseAdapter<Data> {
    return QueryFragment_ResponseAdapter.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> = listOf(
    ResponseField.FieldSet(null, QueryFragment_ResponseAdapter.RESPONSE_FIELDS)
  )
  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    QueryFragment_VariablesAdapter.obj().toResponse(writer, responseAdapterCache, this)
  }

  data class Data(
    val __typename: String = "Query",
    val organization: Organization?
  ) : Fragment.Data {
    data class Organization(
      val id: String,
      val user: List<User>
    ) {
      data class User(
        val __typename: String = "User",
        val userFragment: UserFragment.Data?
      )
    }
  }
}
