// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.named_fragment_with_variables.fragment.adapter

import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.StringResponseAdapter
import com.apollographql.apollo3.api.Variable
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.example.named_fragment_with_variables.fragment.UserFragmentImpl
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
object UserFragmentImpl_ResponseAdapter : ResponseAdapter<UserFragmentImpl.Data> {
  val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(
    ResponseField.Typename,
    ResponseField(
      type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
      fieldName = "firstName",
    ),
    ResponseField(
      type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
      fieldName = "lastName",
    ),
    ResponseField(
      type = ResponseField.Type.NotNull(ResponseField.Type.Named.Other("String")),
      fieldName = "avatar",
      arguments = mapOf<String, Any?>(
        "size" to Variable("size")),
    )
  )

  val RESPONSE_NAMES: List<String> = RESPONSE_FIELDS.map { it.responseName }

  override fun fromResponse(reader: JsonReader, responseAdapterCache: ResponseAdapterCache):
      UserFragmentImpl.Data {
    var __typename: String? = null
    var firstName: String? = null
    var lastName: String? = null
    var avatar: String? = null
    while(true) {
      when (reader.selectName(RESPONSE_NAMES)) {
        0 -> __typename = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
        1 -> firstName = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
        2 -> lastName = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
        3 -> avatar = StringResponseAdapter.fromResponse(reader, responseAdapterCache)
        else -> break
      }
    }
    return UserFragmentImpl.Data(
      __typename = __typename!!,
      firstName = firstName!!,
      lastName = lastName!!,
      avatar = avatar!!
    )
  }

  override fun toResponse(
    writer: JsonWriter,
    responseAdapterCache: ResponseAdapterCache,
    value: UserFragmentImpl.Data
  ) {
    writer.beginObject()
    writer.name("__typename")
    StringResponseAdapter.toResponse(writer, responseAdapterCache, value.__typename)
    writer.name("firstName")
    StringResponseAdapter.toResponse(writer, responseAdapterCache, value.firstName)
    writer.name("lastName")
    StringResponseAdapter.toResponse(writer, responseAdapterCache, value.lastName)
    writer.name("avatar")
    StringResponseAdapter.toResponse(writer, responseAdapterCache, value.avatar)
    writer.endObject()
  }
}
