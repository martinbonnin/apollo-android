// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.reserved_keywords

import com.apollographql.apollo.api.Operation
import com.apollographql.apollo.api.Query
import com.apollographql.apollo.api.ResponseField
import com.apollographql.apollo.api.internal.QueryDocumentMinifier
import com.apollographql.apollo.api.internal.ResponseAdapter
import com.example.reserved_keywords.adapter.TestQuery_ResponseAdapter
import kotlin.Array
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class TestQuery : Query<TestQuery.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun variables(): Operation.Variables = Operation.EMPTY_VARIABLES

  override fun name(): String = OPERATION_NAME

  override fun adapter(): ResponseAdapter<Data> = TestQuery_ResponseAdapter
  override fun responseFields(): Array<ResponseField> = TestQuery_ResponseAdapter.RESPONSE_FIELDS
  /**
   * The query type, represents all of the entry points into our object graph
   */
  data class Data(
    val yield_: Yield?,
    val objects: List<Object?>?
  ) : Operation.Data {
    fun objectsFilterNotNull(): List<Object>? = objects?.filterNotNull()

    /**
     * A character from the Star Wars universe
     */
    data class Yield(
      /**
       * The ID of the character
       */
      val it_: String,
      /**
       * The name of the character
       */
      val name: String
    )

    interface Object {
      val __typename: String

      interface Character : Object {
        override val __typename: String

        /**
         * The name of the character
         */
        val name: String
      }

      data class CharacterObject(
        override val __typename: String,
        /**
         * The name of the character
         */
        override val name: String
      ) : Object, Character

      data class OtherObject(
        override val __typename: String
      ) : Object

      companion object {
        fun Object.asCharacter(): Character? = this as? Character
      }
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "da9796efa24977e73e9b865a993e83961235a63020ff989484d31097ab8e065b"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query TestQuery {
          |  yield: hero {
          |    it: id
          |    name
          |  }
          |  objects: search(text: "abc") {
          |    __typename
          |    ... on Character {
          |      name
          |    }
          |  }
          |}
          """.trimMargin()
        )

    val OPERATION_NAME: String = "TestQuery"
  }
}
