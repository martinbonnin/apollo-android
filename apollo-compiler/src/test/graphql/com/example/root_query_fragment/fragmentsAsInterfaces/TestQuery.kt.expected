// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.root_query_fragment

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.root_query_fragment.adapter.TestQuery_ResponseAdapter
import com.example.root_query_fragment.adapter.TestQuery_VariablesAdapter
import com.example.root_query_fragment.fragment.QueryFragment
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class TestQuery : Query<TestQuery.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    TestQuery_VariablesAdapter.obj().toResponse(writer, responseAdapterCache, this)
  }

  override fun name(): String = OPERATION_NAME

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> = listOf(
    ResponseField.FieldSet("Query", TestQuery_ResponseAdapter.QueryData.RESPONSE_FIELDS),
    ResponseField.FieldSet(null, TestQuery_ResponseAdapter.OtherData.RESPONSE_FIELDS),
  )
  /**
   * The query type, represents all of the entry points into our object graph
   */
  interface Data : Query.Data {
    val __typename: String

    interface Query : Data, QueryFragment {
      override val hero: Hero?

      /**
       * A character from the Star Wars universe
       */
      interface Hero : QueryFragment.Hero
    }

    data class QueryData(
      override val __typename: String,
      override val hero: Hero?
    ) : Data, Query, QueryFragment {
      /**
       * A character from the Star Wars universe
       */
      data class Hero(
        /**
         * The name of the character
         */
        override val name: String
      ) : Query.Hero, QueryFragment.Hero
    }

    data class OtherData(
      override val __typename: String
    ) : Data

    companion object {
      fun Data.queryFragment(): QueryFragment? = this as? QueryFragment
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "f2287d7a8933207536dba2321db795487257ae1c8f5a9f0577d02361c0117ae5"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query TestQuery {
          |  __typename
          |  ...QueryFragment
          |}
          |fragment QueryFragment on Query {
          |  __typename
          |  hero {
          |    name
          |  }
          |}
          """.trimMargin()
        )

    val OPERATION_NAME: String = "TestQuery"
  }
}
