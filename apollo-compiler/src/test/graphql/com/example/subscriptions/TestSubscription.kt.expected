// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.subscriptions

import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.Subscription
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.subscriptions.adapter.TestSubscription_ResponseAdapter
import com.example.subscriptions.adapter.TestSubscription_VariablesAdapter
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
data class TestSubscription(
  val repo: String
) : Subscription<TestSubscription.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    TestSubscription_VariablesAdapter.obj().toResponse(writer, responseAdapterCache, this)
  }

  override fun name(): String = OPERATION_NAME

  override fun adapter(): ResponseAdapter<Data> {
    return TestSubscription_ResponseAdapter.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> = listOf(
    ResponseField.FieldSet(null, TestSubscription_ResponseAdapter.RESPONSE_FIELDS)
  )
  data class Data(
    /**
     * Subscription fires on every comment added
     */
    val commentAdded: CommentAdded?
  ) : Subscription.Data {
    /**
     * A comment about an entry, submitted by a user
     */
    data class CommentAdded(
      /**
       * The SQL ID of this entry
       */
      val id: Int,
      /**
       * The text of the comment
       */
      val content: String
    )
  }

  companion object {
    const val OPERATION_ID: String =
        "f053ee1afe42260f1511e417b6133f1cb8507c185e2e7b4e1e579696dbc8f2af"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |subscription TestSubscription(${'$'}repo: String!) {
          |  commentAdded(repoFullName: ${'$'}repo) {
          |    id
          |    content
          |  }
          |}
          """.trimMargin()
        )

    val OPERATION_NAME: String = "TestSubscription"
  }
}
