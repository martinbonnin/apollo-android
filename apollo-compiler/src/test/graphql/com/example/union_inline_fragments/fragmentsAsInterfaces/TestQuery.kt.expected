// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.union_inline_fragments

import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.QueryDocumentMinifier
import com.apollographql.apollo3.api.ResponseAdapter
import com.apollographql.apollo3.api.ResponseAdapterCache
import com.apollographql.apollo3.api.ResponseField
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.union_inline_fragments.adapter.TestQuery_ResponseAdapter
import com.example.union_inline_fragments.adapter.TestQuery_VariablesAdapter
import com.example.union_inline_fragments.type.Episode
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Suppress("NAME_SHADOWING", "UNUSED_ANONYMOUS_PARAMETER", "LocalVariableName",
    "RemoveExplicitTypeArguments", "NestedLambdaShadowedImplicitParameter", "PropertyName",
    "RemoveRedundantQualifierName")
class TestQuery : Query<TestQuery.Data> {
  override fun operationId(): String = OPERATION_ID

  override fun queryDocument(): String = QUERY_DOCUMENT

  override fun serializeVariables(writer: JsonWriter, responseAdapterCache: ResponseAdapterCache) {
    TestQuery_VariablesAdapter.obj().toResponse(writer, responseAdapterCache, this)
  }

  override fun name(): String = OPERATION_NAME

  override fun adapter(): ResponseAdapter<Data> {
    return TestQuery_ResponseAdapter.obj()
  }

  override fun responseFields(): List<ResponseField.FieldSet> = listOf(
    ResponseField.FieldSet(null, TestQuery_ResponseAdapter.RESPONSE_FIELDS)
  )
  /**
   * The query type, represents all of the entry points into our object graph
   */
  data class Data(
    val search: List<Search?>?
  ) : Query.Data {
    fun searchFilterNotNull(): List<Search>? = search?.filterNotNull()

    interface Search {
      val __typename: String

      interface Character : Search {
        /**
         * The ID of the character
         */
        val id: String

        /**
         * The name of the character
         */
        val name: String

        /**
         * The friends of the character, or an empty list if they have none
         */
        val friends: List<Friends?>?

        /**
         * A character from the Star Wars universe
         */
        interface Friends {
          val __typename: String

          interface Character : Friends {
            /**
             * The name of the character
             */
            val name: String
          }

          interface Human : Friends {
            /**
             * The home planet of the human, or null if unknown
             */
            val homePlanet: String?

            /**
             * This human's friends, or an empty list if they have none
             */
            val friends: List<Friends?>?

            /**
             * A character from the Star Wars universe
             */
            interface Friends {
              val __typename: String

              interface Character : Friends {
                /**
                 * The movie this character first appears in
                 */
                val firstAppearsIn: Episode
              }
            }
          }

          interface Droid : Friends {
            /**
             * This droid's primary function
             */
            val primaryFunction: String?

            /**
             * This droid's friends, or an empty list if they have none
             */
            val friends: List<Friends?>?

            /**
             * A character from the Star Wars universe
             */
            interface Friends {
              /**
               * The ID of the character
               */
              val id: String
            }
          }
        }
      }

      interface Starship : Search {
        /**
         * The name of the starship
         */
        val name: String
      }

      data class CharacterSearch(
        override val __typename: String,
        /**
         * The ID of the character
         */
        override val id: String,
        /**
         * The name of the character
         */
        override val name: String,
        /**
         * The friends of the character, or an empty list if they have none
         */
        override val friends: List<Friends?>?
      ) : Search, Character {
        /**
         * A character from the Star Wars universe
         */
        interface Friends : Character.Friends {
          data class CharacterDroidFriends(
            override val __typename: String,
            /**
             * The name of the character
             */
            override val name: String,
            /**
             * This droid's primary function
             */
            override val primaryFunction: String?,
            /**
             * This droid's friends, or an empty list if they have none
             */
            override val friends: List<Friends?>?
          ) : Character.Friends, Character.Friends.Character, Character.Friends.Droid, Friends {
            /**
             * A character from the Star Wars universe
             */
            data class Friends(
              /**
               * The ID of the character
               */
              override val id: String
            ) : Character.Friends.Droid.Friends
          }

          data class CharacterHumanFriends(
            override val __typename: String,
            /**
             * The name of the character
             */
            override val name: String,
            /**
             * The home planet of the human, or null if unknown
             */
            override val homePlanet: String?,
            /**
             * This human's friends, or an empty list if they have none
             */
            override val friends: List<Friends?>?
          ) : Character.Friends, Character.Friends.Character, Character.Friends.Human, Friends {
            /**
             * A character from the Star Wars universe
             */
            interface Friends : Character.Friends.Human.Friends {
              data class CharacterFriends(
                override val __typename: String,
                /**
                 * The movie this character first appears in
                 */
                override val firstAppearsIn: Episode
              ) : Character.Friends.Human.Friends, Character.Friends.Human.Friends.Character,
                  Friends

              data class OtherFriends(
                override val __typename: String
              ) : Character.Friends.Human.Friends, Friends
            }
          }

          data class OtherFriends(
            override val __typename: String
          ) : Character.Friends, Friends
        }
      }

      data class StarshipSearch(
        override val __typename: String,
        /**
         * The name of the starship
         */
        override val name: String
      ) : Search, Starship

      data class OtherSearch(
        override val __typename: String
      ) : Search
    }
  }

  companion object {
    const val OPERATION_ID: String =
        "2c2de063c729a4ce1b51648279b6afd6372ac91ae33c304f4e33d20fb098cfc6"

    val QUERY_DOCUMENT: String = QueryDocumentMinifier.minify(
          """
          |query TestQuery {
          |  search(text: "test") {
          |    __typename
          |    ... on Character {
          |      id
          |      name
          |      friends {
          |        __typename
          |        ... on Character {
          |          name
          |        }
          |        ... on Human {
          |          homePlanet
          |          friends {
          |            __typename
          |            ... on Character {
          |              firstAppearsIn
          |            }
          |          }
          |        }
          |        ... on Droid {
          |          primaryFunction
          |          friends {
          |            id
          |          }
          |        }
          |      }
          |    }
          |    ... on Starship {
          |      name
          |    }
          |  }
          |}
          """.trimMargin()
        )

    val OPERATION_NAME: String = "TestQuery"
  }
}
